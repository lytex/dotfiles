# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
export PATH=$PATH:~/.local/bin

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(z zsh-autosuggestions sudo command-not-found
zsh-interactive-cd zsh-syntax-highlighting fzf)

source $ZSH/oh-my-zsh.sh

# User configuration
# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

alias doom=~/.emacs.d/bin/doom
source "$HOME/.zsh/plugins/zsh-system-clipboard/zsh-system-clipboard.zsh"

export NVIM_LOG_FILE="$HOME/.nvimlog"

alias my-fzf-command='fzf --height=10% --preview-window=noborder --border=top --info=inline'

function fzf-cd-places () {
    directory=$(cat ~/.local/share/user-places.xbel | grep -F 'bookmark href="file:///' | sed -E 's#[ ]*<bookmark href="file://([^"]+)">#\1#' |  my-fzf-command --preview "ls '{1}'")
    RBUFFER=" '${directory}'${RBUFFER}"
}

# Tag navigation
function fzf-cd-tags () {
    tag=$(cat ~/.local/share/user-places.xbel | grep -F 'bookmark href="tags:/' | grep -vF ' <bookmark href="tags:/">' | sed -E 's#[ ]*<bookmark href="tags:/([^"]+)">#\1#' | my-fzf-command --preview 'baloosearch tag:{1}'); directory=$(baloosearch tag:$tag | my-fzf-command --preview "ls '{1}'")
    RBUFFER=" '${directory}'${RBUFFER}"
}
zle -N fzf-cd-tags
zle -N fzf-cd-places

autoload -U edit-command-line
zle -N edit-command-line

bindkey -v
bindkey -a ' .' fzf-file-widget # Maybe ' fz' ?
bindkey -a ' c' fzf-cd-widget
bindkey -a ' r' fzf-history-widget
bindkey -a ' p' fzf-cd-places
bindkey -a ' t' fzf-cd-tags
bindkey -a '  ' edit-command-line


export WORKON_HOME=$HOME/.virtualenvs
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
source $HOME/.local/bin/virtualenvwrapper.sh

# Git alias copied from:
# https://github.com/ohmyzsh/ohmyzsh/blob/master/plugins/git/git.plugin.zsh
# so that (in theory) I only put what I know and use
alias gds='git diff --staged'
alias gss='git status -s'
# Custom alias
function gsp () {git stash && eval "$@ "&& git stash pop} # Surround a given function with stash and stash pop
alias gc-="git checkout -- ."
alias gc-f="git checkout -- . && git clean -fd"
function gsh () {git rebase -i HEAD~$1}
function gfo () {git fetch origin $1:$1}
function gsm () {git commit -S -m "$@"}

eval $(thefuck --alias)
alias f=fuck
alias t=tldr
alias c=chezmoi
export PATH="$PATH:/$HOME/.local/bin"
# alias c=$HOME/.local/bin/chezmoi
export EDITOR="nvr --remote-wait"
export VISUAL="nvr --remote-wait"

if [ "$TERM" = "xterm-kitty" ]; then
    alias ssh="kitty +kitten ssh"
fi

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# fix issue with tmux: https://github.com/zsh-users/zsh-autosuggestions/issues/229
if [ ! "$TMUX" = "" ]; then export TERM=xterm-256color; fi
export SHELL=/bin/zsh
export ET_NO_TELEMETRY=false

__tmux_fzf_get_session__() {
    session=$(tmux list-sessions -F "#{session_name}" 2>/dev/null |
        fzf --exit-0 --preview='tmux_tree {}')
    echo "$session"
}

# Tmux session switcher (`tms foo` attaches to `foo` if exists, else creates it)
tms() {
    [[ -n "$TMUX" ]] && change="switch-client" || change="attach-session"
    if [[ -n "$1" ]]; then
        if [[ "$1" == "-ask" ]]; then
            read -r -p "New tmux session name: " session_name
        else
            session_name="$1"
        fi
        tmux $change -t "$session_name" 2>/dev/null || \
            (tmux new-session -d -s "$session_name" && \
            tmux $change -t "$session_name");
        return
    fi
    session=$(eval __tmux_fzf_get_session__)
    tmux $change -t "$session" || echo "No sessions found."
}

function pipenv () {shift; eval "$@"}

alias ccd='cd $(chezmoi source-path)'

alias copy='xclip -sel clip'

function lvim() {
    if (($# > 0)); then
        command lvim ~/.config/lvim/config.lua +:w "$@" +:next
    else
        command lvim ~/.config/lvim/config.lua +:w +:bd
    fi
}
{{ if .work }}
alias k=kubectl
source <(kubectl completion zsh)
alias g=gcloud
if [ -f /usr/share/google-cloud-sdk/completion.zsh.inc ]; then source /usr/share/google-cloud-sdk/completion.zsh.inc; fi
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
{{ end }}

# vim: sw=4 ts=4 wm=4 et ft=zsh
