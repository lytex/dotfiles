# vim: ft=yaml

matches:
  - trigger: ;newptmux
    replace: |
      PROJECT_ROOT='/home/julian/code/foobar'
      PROJECT_NAME='example-project'
      ENV_FILE="$PROJECT_ROOT/.env"
      VENV_ACTIVATE="/home/julian/.local/share/venvs/$(md5sum <<< "$PWD" | awk '{print $1}')/venv/bin/activate"

      function launch_script_in_session_window() {
          session=$1
          window=$2
          shift 2
          if tmux list-windows -t "$session"; then
              tmux neww -t "$session": -n "$window" -d "$@; $SHELL -l"
          else
              tmux new -s "$session" -n "$window" -d "$@; $SHELL -l"
          fi
      }

      OPTIND=1
      while getopts ":l:" opt; do
        case ${opt} in
          l)
            command_to_launch=$OPTARG
            ;;
          ,*)
            ;;
        esac
      done

      command_to_launch=${command_to_launch:-jupyter,django}

      if echo $command_to_launch | grep jupyter; then
          # Only valid for zsh, $((  )) supports floating point arithmetic
          launch_script_in_session_window $PROJECT_NAME jupyter "
          cd $PROJECT_ROOT
          set -a
          source $ENV_FILE
          set +a
          jupyter lab --NotebookApp.ResourceUseDisplay.mem_limit=$(( 3.0 *1024*1024*1024 )) --NotebookApp.ResourceUseDisplay.track_cpu_percent=True"
      fi

      if echo $command_to_launch | grep django; then
          launch_script_in_session_window $PROJECT_NAME django "
          cd $PROJECT_ROOT
          source $VENV_ACTIVATE
          cd django_app
          set -a
          source $ENV_FILE
          set +a
          for port in {8000..8010}; do
              python manage.py runserver 0.0.0.0:"'$port'"
          done
          "
      fi

      if echo $command_to_launch | grep postgis; then
        launch_script_in_session_window $PROJECT_NAME postgis docker run \
                        -v $HOME/.local/share/dbname:/var/lib/postgresql/data \
                        -e POSTGRES_PASSWORD='myinsecurepassword' \
                        -p 5432:5432 \
                        --label utils-start-postgres \
                        postgis/postgis:14-3.3
      fi

      unset command_to_launch

    label: new project tmux start script

  - trigger: ;newpvimrc
    replace: |
      vim.cmd([[
      let $PATH=printf("%s:%s", "/home/julian/.local/share/venvs/71a7e2e214fa6400c06d3bc937b3c740/venv/bin", $PATH)
      let $VIRTUAL_ENV=$HOME . "/home/julian/.local/share/venvs/71a7e2e214fa6400c06d3bc937b3c740/venv/"
      set colorcolumn=100
      ]])

      local null_ls_status_ok, null_ls = pcall(require, "null-ls")
      if not null_ls_status_ok then
              return
      end

      -- https://github.com/jose-elias-alvarez/null-ls.nvim/tree/main/lua/null-ls/builtins/formatting
      local formatting = null_ls.builtins.formatting
      -- https://github.com/jose-elias-alvarez/null-ls.nvim/tree/main/lua/null-ls/builtins/diagnostics
      local diagnostics = null_ls.builtins.diagnostics

      null_ls.setup({
              debug = false,
              sources = {
                      formatting.prettier.with({ extra_args = { "--no-semi", "--single-quote", "--jsx-single-quote" } }),
                      formatting.black.with({ extra_args = { "--fast", "--line-length", "100" } }),
                      formatting.isort,
                      diagnostics.flake8,
              },
      })

      -- vim: ft=lua

    label: new project .vimrc.lua script
# vim: ft=yaml
