#| -------------------------------------------------------------------------- KMonad: US ansi 100% template This file contains the `defsrc` configuration for a standard US-ansi 100% keyboard. Modelled on a standard DAS-keyboard 100%. Copy out the 'defsrc' layer to start your own keyboard configuration. Copy out the `deflayer` template to easily start a new layer with matching `transparent` buttons. -------------------------------------------------------------------------- |#
(defalias   
            slc (tap-hold 150 (around-next-timeout 500 lctl XX) lctl)
            sls (tap-hold 150 (around-next-timeout 500 lsft XX) lsft)
            sla (tap-hold 150 (around-next-timeout 500 lalt XX) lalt)
            slm (tap-hold 150 (around-next-timeout 500 lmet XX) lmet)
            src (tap-hold 150 (around-next-timeout 500 rctl XX) rctl)
            srs (tap-hold 150 (around-next-timeout 500 rsft XX) rsft)
            sra (tap-hold 150 (around-next-timeout 500 ralt XX) ralt)

            ;; xdotool takes a time that makes the kmonadesc lock fail, so we send it as a new process to avoid blocking creating the lock
            e_j (tap-hold-next 150 j (cmd-button "rm /tmp/kmonadesc; (touch /tmp/kmonadj &); rm /tmp/kmonadk" "if ! ls /tmp/kmonadesc && ls /tmp/kmonadj && ls /tmp/kmonadk; then (xdotool key 'Escape' &) && touch /tmp/kmonadesc; fi;") :timeout-button j)
            e_k (tap-hold-next 150 k (cmd-button "rm /tmp/kmonadesc; (touch /tmp/kmonadk &); rm /tmp/kmonadj" "if ! ls /tmp/kmonadesc && ls /tmp/kmonadk && ls /tmp/kmonadj; then (xdotool key 'Escape' &) && touch /tmp/kmonadesc; fi;") :timeout-button k)
            ;; l (tap-hold-next 150 l (cmd-button "if [ -e /tmp/kmonadj -a ! -e /tmp/kmonadk ]; then (xdotool type 'jl' &) && rm /tmp/kmonadj; elif [ -e /tmp/kmonadk -a ! -e /tmp/kmonadj ]; then (xdotool type 'kl' &) && rm /tmp/kmonadk; else (xdotool key 'l' &); fi") :timeout-button l)

            )

(defsrc
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12        ssrq slck pause
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc  ins  home pgup  nlck kp/  kp*  kp-
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \     del  end  pgdn  kp7  kp8  kp9  kp+
  caps a    s    d    f    g    h    j   k    l    ;    '    ret                        kp4  kp5  kp6
  lsft z    x    c    v    b    n    m    ,    .    /    rsft                 up         kp1  kp2  kp3  kprt
  lctl lmet lalt           spc            ralt rmet cmp  rctl            left down rght  kp0  kp.
)


(deflayer qwerty
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12        ssrq slck pause
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc  ins  home pgup  nlck kp/  kp*  kp-
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \     del  end  pgdn  kp7  kp8  kp9  kp+
  @slc a    s    d    f    g    h  @e_j  @e_k  l    ;    '    ret                        kp4  kp5  kp6
  @sls z    x    c    v    b    n    m    ,    .    /    @srs                 up         kp1  kp2  kp3  kprt
  @slc @slm @sla           spc            @sra rmet cmp  @src            left down rght  kp0  kp.
)


(defcfg
  input  (device-file "/dev/input/by-path/platform-i8042-serio-0-event-kbd")
  output (uinput-sink "My KMonad output")
  ;; cmp-seq ralt    ;; Set the compose key to `RightAlt'
  ;; cmp-seq-delay 5 ;; 5ms delay between each compose-key sequence press
  fallthrough true
  allow-cmd true
        )
;; vim: ft=lisp
